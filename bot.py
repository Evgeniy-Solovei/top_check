import logging
import sys

import django_setup
import asyncio
import os
import django
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command, CommandStart
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from dotenv import load_dotenv
from top_check_core.models import UserProfile, Referral
from handlers import handle_gifts, handle_promotion, handle_back, handle_balance, handle_referral_link
from keyboard import get_main_keyboard


load_dotenv()
TOKEN = os.getenv("TOKEN")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

dp.message.register(handle_gifts, lambda message: message.text == "–ü–æ–¥–∞—Ä–∫–∏")
dp.message.register(handle_balance, lambda message: message.text == "–ë–∞–ª–∞–Ω—Å")
dp.message.register(handle_promotion, lambda message: message.text == "–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ")
dp.message.register(handle_back, lambda message: message.text == "–ù–∞–∑–∞–¥")
dp.message.register(handle_referral_link, lambda message: message.text == "–†–µ—Ñ.—Å—Å—ã–ª–∫–∞")


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º"
def get_share_phone_keyboard():
    builder = ReplyKeyboardBuilder()
    builder.add(types.KeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True))
    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True)


# –ö–æ–º–∞–Ω–¥–∞ /start —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º
@dp.message(CommandStart())
async def handle_start(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –≤ –∫–æ–º–∞–Ω–¥–µ
    referral_code = None
    if len(message.text.split()) > 1:
        referral_code = message.text.split()[1]

    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥, –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º user_id
    if referral_code:
        if int(referral_code) == user_id:
            await message.answer(
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É. –í–æ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                reply_markup=get_main_keyboard()
            )
            return

        try:
            # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_profile, created = await UserProfile.objects.aget_or_create(
                user_id=user_id,
                defaults={'username': username}
            )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ Referral –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            referral_exists = await Referral.objects.filter(referred_user=user_profile).aexists()
            if referral_exists:
                await message.answer(
                    "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É. –í–æ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                    reply_markup=get_main_keyboard()
                )
                return

            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≥–ª–∞—Å–∏–ª
            referrer = await UserProfile.objects.aget(user_id=int(referral_code))

            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ Referral
            await Referral.objects.acreate(referrer=referrer, referred_user=user_profile)

            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ
            referrer_name = f"@{referrer.username}" if referrer.username else f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {referrer.user_id}"

            welcome_message = (
                f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ \"TOP-CHECK\" –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è!\n\n"
                f"–ü—Ä–æ–µ–∫—Ç \"TOP-CHECK\" - —ç—Ç–æ –ø–æ–¥–∞—Ä–æ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞, –≥–¥–µ –ª—é–¥–∏ –¥–∞—Ä—è—Ç –¥–µ–Ω–µ–∂–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏, "
                f"–∏ –º–æ–≥—É—Ç –ø–æ–ª—É—á–∏—Ç—å –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–Ω–µ–∂–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–∞—à–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞!\n\n"
                f"–¢–µ–±—è –ø—Ä–∏–≥–ª–∞—Å–∏–ª {referrer_name}\n\n"
                f"–ñ–º–∏ –∫–Ω–æ–ø–∫—É - –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º –∏ –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –∫–ª—É–± –î—Ä—É–∑–µ–π!"
            )
            await message.answer(welcome_message, reply_markup=get_share_phone_keyboard())
        except UserProfile.DoesNotExist:
            await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥.")
    else:
        # –ï—Å–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ –Ω–µ—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
        try:
            user_profile = await UserProfile.objects.aget(user_id=user_id)
            await message.answer(
                "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π.",
                reply_markup=get_main_keyboard()
            )
        except UserProfile.DoesNotExist:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.answer(
                "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É.",
                reply_markup=get_main_keyboard()
            )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@dp.message(lambda message: message.contact is not None)
async def handle_contact(message: types.Message):
    user_id = message.from_user.id
    phone_number = message.contact.phone_number

    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_profile = await UserProfile.objects.aget(user_id=user_id)
        user_profile.phone_number = phone_number
        await user_profile.asave()

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª–µ
        referral = await Referral.objects.select_related('referrer').filter(referred_user=user_profile).afirst()
        if referral:
            referrer = referral.referrer
            if referrer.username:
                referrer_name = f'<a href="tg://resolve?domain={referrer.username}">@{referrer.username}</a>'
            else:
                referrer_name = f'<a href="tg://user?id={referrer.user_id}">–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {referrer.user_id}</a>'
        else:
            referrer_name = "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"

        success_message = (
            f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –≤ –ø—Ä–æ–µ–∫—Ç–µ \"TOP-CHECK\" ü•≥ü•≥ü•≥ü•≥ü•≥\n\n"
            f"–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ, –ø–∏—à–∏ –≤ –ª–∏—á–∫—É {referrer_name}\n"
            f"–≠—Ç–æ —Ç–≤–æ–π –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å –∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫!\n"
            f"–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –µ–≥–æ —Å–ª—É—à–∞—Ç—å—Å—è –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤ –ø–æ—à–∞–≥–æ–≤–æ–º —Ä–µ–∂–∏–º–µ, "
            f"–∫–æ–Ω–µ—á–Ω–æ, –ª—É—á—à–µ –≤—Å—ë –ø–µ—Ä–µ—Å–ø—Ä–æ—Å–∏—Ç—å –∏ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É –≤—ã—à–µ—Å—Ç–æ—è—â–∏—Ö –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ –∏ –∞–¥–º–∏–Ω–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞!\n\n"
            f"–ñ–µ–ª–∞–µ–º —Ç–µ–±–µ –º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥:\n"
            f"- –æ—Ç 10 000 —Ä—É–±–ª–µ–π –ö–∞–∂–¥—ã–π –ß–∞—Å;\n"
            f"- –æ—Ç 1 000 000 —Ä—É–±–ª–µ–π –ï–∂–µ–º–µ—Å—è—á–Ω–æ;\n"
            f"- –æ—Ç 100 000 000 —Ä—É–±–ª–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ó–∞ —ç—Ç–æ—Ç –ì–æ–¥.\n\n"
        )
        # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º"
        await message.answer(success_message, reply_markup=types.ReplyKeyboardRemove(), parse_mode="HTML")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü–æ–¥–∞—Ä–∫–∏", "–ë–∞–ª–∞–Ω—Å", "–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ"
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_main_keyboard())
    except UserProfile.DoesNotExist:
        await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")


# –ö–æ–º–∞–Ω–¥–∞ /referral
@dp.message(Command("referral"))
async def cmd_referral(message: types.Message):
    user_id = message.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_profile = await UserProfile.objects.aget(user_id=user_id)
    referral_link = f"https://t.me/TOP_CHECK_Gifts_bot?start={user_profile.user_id}"
    await message.answer(f"–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {referral_link}")


# async def start_bot():
#     await dp.start_polling(bot)
#
#
# # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
# if __name__ == "__main__":
#     print("–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω!")
#     main()  # –í–∞—à–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
#     asyncio.run(start_bot())

async def main() -> None:
    # And the run events dispatching
    await dp.start_polling(bot)


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(main())
