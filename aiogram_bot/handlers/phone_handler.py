from aiogram import Router, types

from aiogram_bot.keyboard.start_keyboard import get_main_keyboard
from top_check_core.models import UserProfile, Referral

router = Router()


@router.message(lambda message: message.contact is not None)
async def handle_contact(message: types.Message):
    user_id = message.from_user.id
    phone_number = message.contact.phone_number
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_profile = await UserProfile.objects.aget(user_id=user_id)
        user_profile.phone_number = phone_number
        await user_profile.asave()
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª–µ
        referral = await Referral.objects.select_related('referrer').filter(referred_user=user_profile).afirst()
        if referral:
            referrer = referral.referrer
            if referrer.username:
                referrer_name = f'<a href="tg://resolve?domain={referrer.username}">@{referrer.username}</a>'
            else:
                referrer_name = f'<a href="tg://user?id={referrer.user_id}">–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {referrer.user_id}</a>'
        else:
            referrer_name = "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
        success_message = (
            f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –≤ –ø—Ä–æ–µ–∫—Ç–µ \"TOP-CHECK\" ü•≥ü•≥ü•≥ü•≥ü•≥\n\n"
            f"–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ, –ø–∏—à–∏ –≤ –ª–∏—á–∫—É {referrer_name}\n"
            f"–≠—Ç–æ —Ç–≤–æ–π –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å –∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫!\n"
            f"–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –µ–≥–æ —Å–ª—É—à–∞—Ç—å—Å—è –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤ –ø–æ—à–∞–≥–æ–≤–æ–º —Ä–µ–∂–∏–º–µ, "
            f"–∫–æ–Ω–µ—á–Ω–æ, –ª—É—á—à–µ –≤—Å—ë –ø–µ—Ä–µ—Å–ø—Ä–æ—Å–∏—Ç—å –∏ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É –≤—ã—à–µ—Å—Ç–æ—è—â–∏—Ö –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤ –∏ –∞–¥–º–∏–Ω–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞!\n\n"
            f"–ñ–µ–ª–∞–µ–º —Ç–µ–±–µ –º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥:\n"
            f"- –æ—Ç 10 000 —Ä—É–±–ª–µ–π –ö–∞–∂–¥—ã–π –ß–∞—Å;\n"
            f"- –æ—Ç 1 000 000 —Ä—É–±–ª–µ–π –ï–∂–µ–º–µ—Å—è—á–Ω–æ;\n"
            f"- –æ—Ç 100 000 000 —Ä—É–±–ª–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ó–∞ —ç—Ç–æ—Ç –ì–æ–¥.\n\n")
        # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º"
        await message.answer(success_message, reply_markup=types.ReplyKeyboardRemove(), parse_mode="HTML")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü–æ–¥–∞—Ä–∫–∏", "–ë–∞–ª–∞–Ω—Å", "–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ"
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=await get_main_keyboard())
    except UserProfile.DoesNotExist:
        await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
