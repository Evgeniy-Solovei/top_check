import uuid
from decimal import Decimal
from aiogram import Router, types
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram_bot.keyboard.gift_keyboard import gifts_keyboard, prices_keyboard, payment_keyboard
from top_check_core.views import get_user_profile, process_subscription_payment

router = Router()


@router.message(lambda message: message.text == "–ü–æ–¥–∞—Ä–∫–∏")
async def handle_gifts(message: types.Message):
    gifts_message = (
        "–í –¥–∞–Ω–Ω–æ–º –º–æ–¥—É–ª–µ –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω—É –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–¥–∞—Ä–æ—á–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º:\n\n"
        "–ü—Ä–æ–≥—Ä–∞–º–º–∞ ‚ÄúComfort‚Äù - –¥–∞—Ä–∏–º –∏ –ø–æ–ª—É—á–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–∞—Ç—å –¥–µ–Ω–µ–∂–Ω—ã–µ –ü–æ–¥–∞—Ä–∫–∏ –∫–∞–∂–¥—ã–π —á–∞—Å, –≤ —Ä–µ–∂–∏–º–µ 24/7;\n\n"
        "–ü—Ä–æ–≥—Ä–∞–º–º–∞ ‚ÄúPremium‚Äù - –¥–∞—Ä–∏–º –∏ –ø–æ–ª—É—á–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–∞—Ç—å –¥–µ–Ω–µ–∂–Ω—ã–µ –ü–æ–¥–∞—Ä–∫–∏ - –ï–∂–µ–º–µ—Å—è—á–Ω–æ;\n\n"
        "–ü—Ä–æ–≥—Ä–∞–º–º–∞ ‚ÄúExclusive‚Äù - –¥–∞—Ä–∏–º –∏ –ø–æ–ª—É—á–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–∞—Ç—å –¥–µ–Ω–µ–∂–Ω—ã–µ –ü–æ–¥–∞—Ä–∫–∏ - —Å–æ–≥–ª–∞—Å–Ω–æ –≥–ª—É–±–∏–Ω—ã –∫–æ–º–∞–Ω–¥—ã –¥–æ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏.\n\n"
        "–í–∞–∂–Ω–æ: –≤—Å–µ –¥–µ–Ω–µ–∂–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –Ω–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ, —ç—Ç–æ –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω—ã–µ –∏ –±–µ–∑–≤–æ–∑–º–µ–∑–¥–Ω—ã–µ –ü–æ–¥–∞—Ä–∫–∏!")
    await message.answer(gifts_message, reply_markup=await gifts_keyboard())


subscription_prices = {
    "comfort": ("COMFORT", [48, 240, 480, 1200, 2400, 4800]),
    "premium": ("PREMIUM", [240, 600, 2400, 6000, 24000, 60000]),
    "exclusive": ("EXCLUSIVE", [1200, 3000, 6000, 15000, 30000, 75000]),
}


@router.callback_query(lambda c: c.data in subscription_prices)
async def show_prices(callback: CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ü–µ–Ω—ã"""
    name, prices = subscription_prices[callback.data]
    text = f"üíé –¢–∞—Ä–∏—Ñ **{name}**\n–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏:"

    unique_id = str(uuid.uuid4())
    await callback.message.edit_text(text, reply_markup=prices_keyboard(prices, callback.data, unique_id))
    await callback.answer()


@router.callback_query(lambda c: c.data.startswith("buy_"))
async def process_purchase(callback: CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Å—É–º–º—ã –ø–æ–¥–ø–∏—Å–∫–∏"""
    _, tariff, price, unique_id = callback.data.split("_")  # –†–∞–∑–±–∏—Ä–∞–µ–º callback_data –Ω–∞ —á–∞—Å—Ç–∏
    text = f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É **{tariff.upper()}** –∑–∞ {price} ‚ÇΩ.\n\n–û–ø–ª–∞—Ç–∏—Ç—å —Å–µ–π—á–∞—Å?"
    #
    # await callback.message.delete()
    await callback.message.answer(text, reply_markup=payment_keyboard(price, tariff, unique_id))


@router.callback_query(lambda c: c.data.startswith("pay_"))
async def process_payment(callback: CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–ø–ª–∞—Ç—É –ø–æ–¥–ø–∏—Å–∫–∏"""
    print('***********')
    print(callback.data)
    _, tariff, price, unique_id = callback.data.split("_")
    price = Decimal(price)  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Ü–µ–Ω—É –≤ float
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ user_id —Å –ø–æ–º–æ—â—å—é —Å–µ—Ä–≤–∏—Å–∞
    user_id = callback.from_user.id
    user_profile = await get_user_profile(user_id)
    if user_profile:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤ —Å –ø–æ–º–æ—â—å—é —Å–µ—Ä–≤–∏—Å–∞
        payment_successful = await process_subscription_payment(user_profile, price)
        if payment_successful:
            text = f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É **{tariff.upper()}** –∑–∞ {price} ‚ÇΩ."
        else:
            text = (
                f"‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ **{tariff.upper()}**.\n"
                "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å."
            )
            text += "\n\n‚¨ÜÔ∏è –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å"
        await callback.message.edit_text(text, reply_markup=None)  # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏
        await callback.answer()
    else:
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await callback.message.edit_text("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")
        await callback.answer()
